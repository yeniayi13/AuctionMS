// <auto-generated />
using System;
using AuctionMS.Infrastructure.Database.Context.Postgres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuctionMS.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuctionMS.Domain.Entities.Auction.AuctionEntity", b =>
                {
                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("AuctionCantidadProducto")
                        .HasColumnType("numeric");

                    b.Property<string>("AuctionCondiciones")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuctionDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuctionEstado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("AuctionFechaFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("AuctionFechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AuctionImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("AuctionIncremento")
                        .HasColumnType("numeric");

                    b.Property<string>("AuctionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("AuctionPriceBase")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AuctionPriceReserva")
                        .HasColumnType("numeric");

                    b.Property<Guid>("AuctionProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuctionUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("AuctionId");

                    b.ToTable("Auctions", (string)null);
                });

            modelBuilder.Entity("AuctionMS.Domain.Entities.Auction.EstadoAuction", b =>
                {
                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("CorrelationId");

                    b.HasIndex("CurrentState");

                    b.ToTable("EstadoAuction", (string)null);
                });

            modelBuilder.Entity("AuctionMS.Domain.Entities.Auction.AuctionEntity", b =>
                {
                    b.OwnsOne("AuctionMS.Domain.Entities.Auction.ValueObjects.AuctionBidId", "AuctionBidId", b1 =>
                        {
                            b1.Property<Guid>("AuctionEntityAuctionId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid");

                            b1.HasKey("AuctionEntityAuctionId");

                            b1.ToTable("Auctions");

                            b1.WithOwner()
                                .HasForeignKey("AuctionEntityAuctionId");
                        });

                    b.Navigation("AuctionBidId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
